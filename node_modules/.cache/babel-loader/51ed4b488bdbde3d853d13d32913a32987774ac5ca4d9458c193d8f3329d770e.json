{"ast":null,"code":"import _slicedToArray from \"/Users/rizzytwizzy/Projects/gam3/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\nfunction RenderHud(_ref) {\n  var defaultScene = _ref.defaultScene,\n    defaultCamera = _ref.defaultCamera,\n    _ref$renderPriority = _ref.renderPriority,\n    renderPriority = _ref$renderPriority === void 0 ? 1 : _ref$renderPriority;\n  var _useThree = useThree(),\n    gl = _useThree.gl,\n    scene = _useThree.scene,\n    camera = _useThree.camera;\n  var oldCLear;\n  useFrame(function () {\n    oldCLear = gl.autoClear;\n    if (renderPriority === 1) {\n      // Clear scene and render the default scene\n      gl.autoClear = true;\n      gl.render(defaultScene, defaultCamera);\n    } // Disable cleaning and render the portal with its own camera\n\n    gl.autoClear = false;\n    gl.clearDepth();\n    gl.render(scene, camera); // Restore default\n\n    gl.autoClear = oldCLear;\n  }, renderPriority); // Without an element that receives pointer events state.pointer will always be 0/0\n\n  return /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: function onPointerOver() {\n      return null;\n    }\n  });\n}\nfunction Hud(_ref2) {\n  var children = _ref2.children,\n    _ref2$renderPriority = _ref2.renderPriority,\n    renderPriority = _ref2$renderPriority === void 0 ? 1 : _ref2$renderPriority;\n  var _useThree2 = useThree(),\n    defaultScene = _useThree2.scene,\n    defaultCamera = _useThree2.camera;\n  var _React$useState = React.useState(function () {\n      return new THREE.Scene();\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 1),\n    hudScene = _React$useState2[0];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(RenderHud, {\n    defaultScene: defaultScene,\n    defaultCamera: defaultCamera,\n    renderPriority: renderPriority\n  })), hudScene, {\n    events: {\n      priority: renderPriority + 1\n    }\n  }));\n}\nexport { Hud };","map":{"version":3,"names":["THREE","React","useThree","createPortal","useFrame","RenderHud","_ref","defaultScene","defaultCamera","_ref$renderPriority","renderPriority","_useThree","gl","scene","camera","oldCLear","autoClear","render","clearDepth","createElement","onPointerOver","Hud","_ref2","children","_ref2$renderPriority","_useThree2","_React$useState","useState","Scene","_React$useState2","_slicedToArray","hudScene","Fragment","events","priority"],"sources":["/Users/rizzytwizzy/Projects/gam3/node_modules/@react-three/drei/core/Hud.js"],"sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, createPortal, useFrame } from '@react-three/fiber';\n\nfunction RenderHud({\n  defaultScene,\n  defaultCamera,\n  renderPriority = 1\n}) {\n  const {\n    gl,\n    scene,\n    camera\n  } = useThree();\n  let oldCLear;\n  useFrame(() => {\n    oldCLear = gl.autoClear;\n\n    if (renderPriority === 1) {\n      // Clear scene and render the default scene\n      gl.autoClear = true;\n      gl.render(defaultScene, defaultCamera);\n    } // Disable cleaning and render the portal with its own camera\n\n\n    gl.autoClear = false;\n    gl.clearDepth();\n    gl.render(scene, camera); // Restore default\n\n    gl.autoClear = oldCLear;\n  }, renderPriority); // Without an element that receives pointer events state.pointer will always be 0/0\n\n  return /*#__PURE__*/React.createElement(\"group\", {\n    onPointerOver: () => null\n  });\n}\n\nfunction Hud({\n  children,\n  renderPriority = 1\n}) {\n  const {\n    scene: defaultScene,\n    camera: defaultCamera\n  } = useThree();\n  const [hudScene] = React.useState(() => new THREE.Scene());\n  return /*#__PURE__*/React.createElement(React.Fragment, null, createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, children, /*#__PURE__*/React.createElement(RenderHud, {\n    defaultScene: defaultScene,\n    defaultCamera: defaultCamera,\n    renderPriority: renderPriority\n  })), hudScene, {\n    events: {\n      priority: renderPriority + 1\n    }\n  }));\n}\n\nexport { Hud };\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,oBAAoB;AAErE,SAASC,SAASA,CAAAC,IAAA,EAIf;EAAA,IAHDC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IACZC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IAAAC,mBAAA,GAAAH,IAAA,CACbI,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAG,CAAC,GAAAA,mBAAA;EAElB,IAAAE,SAAA,GAIIT,QAAQ,CAAC,CAAC;IAHZU,EAAE,GAAAD,SAAA,CAAFC,EAAE;IACFC,KAAK,GAAAF,SAAA,CAALE,KAAK;IACLC,MAAM,GAAAH,SAAA,CAANG,MAAM;EAER,IAAIC,QAAQ;EACZX,QAAQ,CAAC,YAAM;IACbW,QAAQ,GAAGH,EAAE,CAACI,SAAS;IAEvB,IAAIN,cAAc,KAAK,CAAC,EAAE;MACxB;MACAE,EAAE,CAACI,SAAS,GAAG,IAAI;MACnBJ,EAAE,CAACK,MAAM,CAACV,YAAY,EAAEC,aAAa,CAAC;IACxC,CAAC,CAAC;;IAGFI,EAAE,CAACI,SAAS,GAAG,KAAK;IACpBJ,EAAE,CAACM,UAAU,CAAC,CAAC;IACfN,EAAE,CAACK,MAAM,CAACJ,KAAK,EAAEC,MAAM,CAAC,CAAC,CAAC;;IAE1BF,EAAE,CAACI,SAAS,GAAGD,QAAQ;EACzB,CAAC,EAAEL,cAAc,CAAC,CAAC,CAAC;;EAEpB,OAAO,aAAaT,KAAK,CAACkB,aAAa,CAAC,OAAO,EAAE;IAC/CC,aAAa,EAAE,SAAAA,cAAA;MAAA,OAAM,IAAI;IAAA;EAC3B,CAAC,CAAC;AACJ;AAEA,SAASC,GAAGA,CAAAC,KAAA,EAGT;EAAA,IAFDC,QAAQ,GAAAD,KAAA,CAARC,QAAQ;IAAAC,oBAAA,GAAAF,KAAA,CACRZ,cAAc;IAAdA,cAAc,GAAAc,oBAAA,cAAG,CAAC,GAAAA,oBAAA;EAElB,IAAAC,UAAA,GAGIvB,QAAQ,CAAC,CAAC;IAFLK,YAAY,GAAAkB,UAAA,CAAnBZ,KAAK;IACGL,aAAa,GAAAiB,UAAA,CAArBX,MAAM;EAER,IAAAY,eAAA,GAAmBzB,KAAK,CAAC0B,QAAQ,CAAC;MAAA,OAAM,IAAI3B,KAAK,CAAC4B,KAAK,CAAC,CAAC;IAAA,EAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAJ,eAAA;IAAnDK,QAAQ,GAAAF,gBAAA;EACf,OAAO,aAAa5B,KAAK,CAACkB,aAAa,CAAClB,KAAK,CAAC+B,QAAQ,EAAE,IAAI,EAAE7B,YAAY,EAAE,aAAaF,KAAK,CAACkB,aAAa,CAAClB,KAAK,CAAC+B,QAAQ,EAAE,IAAI,EAAET,QAAQ,EAAE,aAAatB,KAAK,CAACkB,aAAa,CAACd,SAAS,EAAE;IACvLE,YAAY,EAAEA,YAAY;IAC1BC,aAAa,EAAEA,aAAa;IAC5BE,cAAc,EAAEA;EAClB,CAAC,CAAC,CAAC,EAAEqB,QAAQ,EAAE;IACbE,MAAM,EAAE;MACNC,QAAQ,EAAExB,cAAc,GAAG;IAC7B;EACF,CAAC,CAAC,CAAC;AACL;AAEA,SAASW,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}